/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package roadways_project;


import java.sql.*;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;


/**
 *
 * @author Ekam
 */
public class avaroutes extends javax.swing.JInternalFrame implements mycred{

    public static String[] str = new String[5];
    /**
     * Creates new form avaroutes
     */
    public avaroutes() {
        initComponents();
        jComboBox1.removeAllItems();
        jComboBox1.addItem("Select Departure City");
          try
        {
            Connection mycon=DriverManager.getConnection(path+place, uname, pass);
            try
            {
               
                String q = "select * from stopsdb  ";
                PreparedStatement mystate = mycon.prepareStatement(q);
                ResultSet myres = mystate.executeQuery();
                if(myres.next())
                {
                    do
                    {
                        jComboBox1.addItem(myres.getString("stopname"));
                    }
                    while(myres.next());
                }
                
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());
                
            }
            finally
            {
                mycon.close();
            }
        }
        catch(Exception e)
        {
          JOptionPane.showMessageDialog(rootPane,"error in connection  "+ e.getMessage());
        }
          
        jComboBox2.addItem("Select Departure City First");
                
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        jComboBox2 = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Available Routes");

        jLabel4.setText("source");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choose city" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jLabel5.setText("destination");

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "choose city" }));
        jComboBox2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Route No", "Route"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setColumnSelectionAllowed(true);
        jScrollPane1.setViewportView(jTable1);
        jTable1.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(140);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(150);
        }

        jButton1.setText("Show All Routes");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Show Buses");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Delete Route");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 688, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(262, 262, 262)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(262, 262, 262)
                        .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(77, 77, 77)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(34, 34, 34)
                                .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 346, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 123, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(30, 30, 30)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 350, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(65, 65, 65)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 196, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(209, 209, 209))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(86, 86, 86)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(4, 4, 4)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(86, 86, 86)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(65, 65, 65)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 39, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed

        if(jComboBox1.getSelectedIndex()>0)
        {
            DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
            mymodel.setRowCount(0);
            jComboBox2.removeAllItems();
            jComboBox2.addItem("Choose Destination City");
            try
            {
                Connection mycon=DriverManager.getConnection(path+place, uname, pass);
                try
                {
                   
                    String q = "select * from stopsdb ";
                    PreparedStatement mystate = mycon.prepareStatement(q);
                    ResultSet myres = mystate.executeQuery();
                    if(myres.next())
                    {
                        do
                        {
                            if(myres.getString("stopname").equals(jComboBox1.getSelectedItem()))
                            {
                                continue;
                            }
                            else
                            {
                                jComboBox2.addItem(myres.getString("stopname"));
                            }
                        }
                        while(myres.next());
                    }
                    
                    
                    String q2 = "select * from routedet where route like ?  ";
                    PreparedStatement mystate2 = mycon.prepareStatement(q2);

                    mystate2.setString(1,"%"+jComboBox1.getSelectedItem().toString()+"%");
                    ResultSet mres = mystate2.executeQuery();
                    
                    if(mres.next())
                    {
                        
                        do
                        {
                            mymodel.addRow(new Object[] {mres.getString("routeno"),mres.getString("route")});
                        }
                        while(mres.next());
                    }

                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());

                }

                finally
                {
                    mycon.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"error in connection  "+ e.getMessage());
            }
        }
        
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jComboBox2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox2ActionPerformed

        if(jComboBox1.getSelectedIndex()>0)
        {
            DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
            mymodel.setRowCount(0);
            try
            {
                Connection mycon=DriverManager.getConnection(path+place, uname, pass);
                try
                {
                   
                                      
                    String q2 = "select * from routedet where route like ?  ";
                    PreparedStatement mystate2 = mycon.prepareStatement(q2);

                    mystate2.setString(1,"%"+jComboBox1.getSelectedItem().toString()+"%"+jComboBox2.getSelectedItem()+"%");
                    ResultSet mres = mystate2.executeQuery();
                    
                    if(mres.next())
                    {
                        
                        do
                        {
                            mymodel.addRow(new Object[] {mres.getString("routeno"),mres.getString("route")});
                        }
                        while(mres.next());
                    }

                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());

                }

                finally
                {
                    mycon.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"error in connection  "+ e.getMessage());
            }
        }
        

    }//GEN-LAST:event_jComboBox2ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed

            DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
            mymodel.setRowCount(0);
            try
            {
                Connection mycon=DriverManager.getConnection(path+place, uname, pass);
                try
                {
                   
                                      
                    String q2 = "select * from routedet";
                    PreparedStatement mystate2 = mycon.prepareStatement(q2);

                    ResultSet mres = mystate2.executeQuery();
                    
                    if(mres.next())
                    {
                        
                        do
                        {
                            mymodel.addRow(new Object[] {mres.getString("routeno"),mres.getString("route")});
                        }
                        while(mres.next());
                    }

                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());

                }

                finally
                {
                    mycon.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"error in connection  "+ e.getMessage());
            }
        
        

    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try
        {
            String s;
            str[0]= jTable1.getValueAt(jTable1.getSelectedRow(),0).toString();
            System.out.println("1");
            s= jTable1.getValueAt(jTable1.getSelectedRow(),1).toString();
            System.out.println("2"+s);
            str[1]=s.substring(0,s.indexOf(","));
            System.out.println("3");
            str[2]=s.substring(s.lastIndexOf(",")+1);
            System.out.println("4");
            
            bquery1 obj= new bquery1(str);
            admin_form.jDesktopPane1.add(obj);
            obj.setVisible(true);
        }
        catch(Exception e)
        {
            JOptionPane.showMessageDialog(rootPane, "Error : "+ e.getMessage());
            //e.printStackTrace();
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        
        try
            {
                Connection mycon=DriverManager.getConnection(path+place, uname, pass);
                try
                {
                   
                                      
                    String q2 = "delete from routedet where routeno=?";
                    PreparedStatement mystate2 = mycon.prepareStatement(q2);
                    mystate2.setString(1,jTable1.getValueAt(jTable1.getSelectedRow(),0).toString());
                    if(mystate2.executeUpdate()>0)
                    {
                        JOptionPane.showMessageDialog(rootPane, "Route Deleted Successfully");
                    }
                    
                }
                catch(Exception e)
                {
                    JOptionPane.showMessageDialog(rootPane,"Error in Query "+e.getMessage());

                }

                finally
                {
                    mycon.close();
                }
            }
            catch(Exception e)
            {
                JOptionPane.showMessageDialog(rootPane,"error in connection  "+ e.getMessage());
            }
        
        

        
        
        DefaultTableModel mymodel = (DefaultTableModel)jTable1.getModel();
        mymodel.removeRow(jTable1.getSelectedRow());
    }//GEN-LAST:event_jButton3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JComboBox<String> jComboBox2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
